import argparse
import logging
import os

from mldaikon.trace import read_trace_file_Pandas

if __name__ == "__main__":
    logger = logging.getLogger(__name__)

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--trace-folder", "-f", help="Folder containing the trace files"
    )
    parser.add_argument(
        "--instr-opts",
        "-o",
        help="Instrumentation options file generated by MLDAIKON when doing selective instrumentation",
    )
    parser.add_argument(
        "--iters", "-i", type=int, help="Number of iterations of the experiment"
    )
    parser.add_argument(
        "--debug", "-d", action="store_true", help="Enable debug logging"
    )
    args = parser.parse_args()
    if args.debug:
        logging.basicConfig(level=logging.DEBUG)

    trace_files = [
        f"{args.trace_folder}/{file}"
        for file in os.listdir(args.trace_folder)
        if file.startswith("trace_") or file.startswith("proxy_log.json")
    ]
    logger.info("Reading traces from %s", "\n".join(trace_files))
    trace = read_trace_file_Pandas(trace_files)

    trace_df = trace.events
    # dump the most frequent API calls
    top10_freq_API = trace_df["function"].value_counts().head(50)
    print(top10_freq_API)
