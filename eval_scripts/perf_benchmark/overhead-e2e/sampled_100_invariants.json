{"text_description": "TBD merged", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "VarTypeParam", "var_type": "torch.cuda.FloatTensor", "attr_name": "data", "pre_value": "non_zero", "post_value": "non_zero"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "TBD merged", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "VarTypeParam", "var_type": "torch.cuda.FloatTensor", "attr_name": "data", "pre_value": "non_zero", "post_value": "non_zero"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "TBD merged", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "VarTypeParam", "var_type": "torch.cuda.FloatTensor", "attr_name": "data", "pre_value": "non_none", "post_value": "non_none"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "TBD merged", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "VarTypeParam", "var_type": "torch.cuda.FloatTensor", "attr_name": "data", "pre_value": "non_none", "post_value": "non_none"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.destroy_process_group contains torch.distributed.distributed_c10d._update_default_pg <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.destroy_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._update_default_pg", "arguments": {"args": {"pg": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d._update_default_pg"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_backend contains torch.distributed.distributed_c10d._get_default_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_backend"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_default_group"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_backend contains torch.distributed.distributed_c10d._rank_not_in_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_backend"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._rank_not_in_group", "arguments": {"args": {"group": {"torch.distributed.distributed_c10d.ProcessGroup": {"group_name": "0"}}}, "func_name": "torch.distributed.distributed_c10d._rank_not_in_group"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_rank contains torch.distributed.distributed_c10d._get_default_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_rank"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_default_group"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_rank contains torch.distributed.distributed_c10d._rank_not_in_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_rank"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._rank_not_in_group", "arguments": {"args": {"group": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d._rank_not_in_group"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_world_size contains torch.distributed.distributed_c10d._get_default_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_world_size"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_default_group"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_world_size contains torch.distributed.distributed_c10d._get_group_size <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_world_size"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_group_size", "arguments": {"args": {"group": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d._get_group_size"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.get_world_size contains torch.distributed.distributed_c10d._rank_not_in_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_world_size"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._rank_not_in_group", "arguments": {"args": {"group": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d._rank_not_in_group"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.c10d_logger._get_msg_dict <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.c10d_logger._get_msg_dict", "arguments": {"args": {"backend": {"str": "nccl"}, "world_size": {"int": 8}, "func_name": {"str": "init_process_group"}}, "func_name": "torch.distributed.c10d_logger._get_msg_dict"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d.BackendConfig.__init__ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.BackendConfig.__init__", "arguments": {"args": {"self": {"torch.distributed.distributed_c10d.BackendConfig": {}}, "backend": {"str": "nccl"}}, "func_name": "torch.distributed.distributed_c10d.BackendConfig.__init__"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d.BackendConfig.get_device_backend_map <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.BackendConfig.get_device_backend_map", "arguments": {"args": {"self": {"torch.distributed.distributed_c10d.BackendConfig": {}}}, "func_name": "torch.distributed.distributed_c10d.BackendConfig.get_device_backend_map"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d.PyCapsule.get_debug_level <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.PyCapsule.get_debug_level"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._check_valid_timeout <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._check_valid_timeout", "arguments": {"args": {"timeout": {"timedelta": {"days": 0, "microseconds": 0, "seconds": 600}}}, "func_name": "torch.distributed.distributed_c10d._check_valid_timeout"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._get_default_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_default_group"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._get_default_timeout <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_default_timeout", "arguments": {"args": {"backend": {"str": "nccl"}}, "func_name": "torch.distributed.distributed_c10d._get_default_timeout"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._get_group_size <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_group_size", "arguments": {"args": {"group": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d._get_group_size"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._get_process_group_name <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._get_process_group_name", "arguments": {"args": {"pg": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d._get_process_group_name"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._new_process_group_helper <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._new_process_group_helper", "arguments": {"args": {"pg_options": {"NoneType": null}, "timeout": {"timedelta": {"days": 0, "microseconds": 0, "seconds": 600}}, "group_size": {"int": 8}, "global_ranks_in_group": {"list": []}, "backend": {"str": "nccl"}, "store": {"torch.distributed.distributed_c10d.PrefixStore": {}}, "group_name": {"str": "0"}}, "func_name": "torch.distributed.distributed_c10d._new_process_group_helper"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._process_group_name <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._process_group_name", "arguments": {"args": {"use_hashed_name": {"bool": false}, "ranks": {"list": []}}, "func_name": "torch.distributed.distributed_c10d._process_group_name"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._rank_not_in_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._rank_not_in_group"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d._update_default_pg <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d._update_default_pg", "arguments": {"args": {"pg": {"torch.distributed.distributed_c10d.ProcessGroup": {"group_name": "0"}}}, "func_name": "torch.distributed.distributed_c10d._update_default_pg"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d.get_backend <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_backend", "arguments": {"args": {"group": {"NoneType": null}}, "func_name": "torch.distributed.distributed_c10d.get_backend"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d.get_rank <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_rank"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.distributed_c10d.get_world_size <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.get_world_size"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.rendezvous._create_c10d_store <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous._create_c10d_store", "arguments": {"args": {"hostname": {"str": "localhost"}, "port": {"int": 12355}, "world_size": {"int": 8}, "timeout": {"timedelta": {"days": 0, "microseconds": 0, "seconds": 600}}, "use_libuv": {"bool": false}}, "func_name": "torch.distributed.rendezvous._create_c10d_store"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.rendezvous._query_to_dict <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous._query_to_dict"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.rendezvous._rendezvous_helper <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous._rendezvous_helper", "arguments": {"args": {"timeout": {"timedelta": {"days": 0, "microseconds": 0, "seconds": 600}}, "url": {"str": "env://"}, "world_size_opt": {"int": 8}}, "func_name": "torch.distributed.rendezvous._rendezvous_helper"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.rendezvous._torchelastic_use_agent_store <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous._torchelastic_use_agent_store"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.distributed_c10d.init_process_group contains torch.distributed.rendezvous.rendezvous <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.distributed_c10d.init_process_group"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous.rendezvous", "arguments": {"args": {"timeout": {"timedelta": {"days": 0, "microseconds": 0, "seconds": 600}}, "url": {"str": "env://"}, "world_size": {"int": 8}}, "func_name": "torch.distributed.rendezvous.rendezvous"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.rendezvous.rendezvous contains torch.distributed.rendezvous._query_to_dict <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous.rendezvous"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous._query_to_dict", "arguments": {"args": {"query": {"str": ""}}, "func_name": "torch.distributed.rendezvous._query_to_dict"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.distributed.rendezvous.rendezvous contains torch.distributed.rendezvous._rendezvous_helper <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous.rendezvous"}, {"param_type": "APIParam", "api_full_name": "torch.distributed.rendezvous._rendezvous_helper", "arguments": {"args": {"timeout": {"timedelta": {"days": 0, "microseconds": 0, "seconds": 600}}, "url": {"str": "env://"}, "world_size_opt": {"int": 8}}, "func_name": "torch.distributed.rendezvous._rendezvous_helper"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.kaiming_uniform_ contains torch.nn.init._calculate_correct_fan <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.kaiming_uniform_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._calculate_correct_fan", "arguments": {"args": {"mode": {"str": "fan_in"}}, "func_name": "torch.nn.init._calculate_correct_fan"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.kaiming_uniform_ contains torch.nn.init._calculate_fan_in_and_fan_out <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.kaiming_uniform_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._calculate_fan_in_and_fan_out"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.kaiming_uniform_ contains torch.nn.init.calculate_gain <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.kaiming_uniform_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init.calculate_gain", "arguments": {"args": {"nonlinearity": {"str": "leaky_relu"}, "param": {"float": 2.23606797749979}}, "func_name": "torch.nn.init.calculate_gain"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.normal_ contains torch.nn.init._no_grad_normal_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.normal_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._no_grad_normal_", "arguments": {"args": {"std": {"float": 0.02}, "generator": {"NoneType": null}}, "func_name": "torch.nn.init._no_grad_normal_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.ones_ contains torch.nn.init._no_grad_fill_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.ones_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._no_grad_fill_", "arguments": {"args": {"val": {"float": 1.0}}, "func_name": "torch.nn.init._no_grad_fill_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.uniform_ contains torch.nn.init._no_grad_uniform_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.uniform_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._no_grad_uniform_", "arguments": {"args": {"generator": {"NoneType": null}}, "func_name": "torch.nn.init._no_grad_uniform_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.xavier_normal_ contains torch.nn.init._calculate_fan_in_and_fan_out <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.xavier_normal_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._calculate_fan_in_and_fan_out"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.xavier_normal_ contains torch.nn.init._no_grad_normal_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.xavier_normal_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._no_grad_normal_", "arguments": {"args": {"mean": {"float": 0.0}, "generator": {"NoneType": null}}, "func_name": "torch.nn.init._no_grad_normal_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.nn.init.zeros_ contains torch.nn.init._no_grad_zero_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.nn.init.zeros_"}, {"param_type": "APIParam", "api_full_name": "torch.nn.init._no_grad_zero_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch._VariableFunctionsClass._foreach_add <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch._VariableFunctionsClass._foreach_add_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add_", "arguments": {"args": {"alpha": {"float": -1.0}}, "func_name": "torch._VariableFunctionsClass._foreach_add_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch._VariableFunctionsClass._foreach_addcmul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcmul_", "arguments": {"args": {"value": {"float": 0.09999999999999998}}, "func_name": "torch._VariableFunctionsClass._foreach_addcmul_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch._VariableFunctionsClass._foreach_div_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_div_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch._VariableFunctionsClass._foreach_mul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_mul_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch._VariableFunctionsClass._foreach_sqrt_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_sqrt_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.optim.adadelta.Adadelta._init_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta._init_group", "arguments": {"args": {"self": {"torch.optim.adadelta.Adadelta": {}}, "group": {"dict": {}}, "params_with_grad": {"list": []}, "grads": {"list": []}, "square_avgs": {"list": []}, "acc_deltas": {"list": []}}, "func_name": "torch.optim.adadelta.Adadelta._init_group"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.optim.adadelta._multi_tensor_adadelta <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adadelta._multi_tensor_adadelta", "arguments": {"args": {"lr": {"float": 1.0}, "rho": {"float": 0.9}, "eps": {"float": 1e-06}, "weight_decay": {"int": 0}, "maximize": {"bool": false}, "differentiable": {"bool": false}, "has_complex": {"bool": false}, "params": {"list": {}}, "grads": {"list": {}}, "square_avgs": {"list": {}}, "acc_deltas": {"list": {}}}, "func_name": "torch.optim.adadelta._multi_tensor_adadelta"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.optim.adadelta.adadelta <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta", "arguments": {"args": {"lr": {"float": 1.0}, "rho": {"float": 0.9}, "eps": {"float": 1e-06}, "weight_decay": {"int": 0}, "foreach": {"NoneType": null}, "maximize": {"bool": false}, "differentiable": {"bool": false}, "has_complex": {"bool": false}, "params": {"list": {}}, "grads": {"list": {}}, "square_avgs": {"list": {}}, "acc_deltas": {"list": {}}}, "func_name": "torch.optim.adadelta.adadelta"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.optim.optimizer._default_to_fused_or_foreach <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._default_to_fused_or_foreach", "arguments": {"args": {"use_fused": {"bool": false}, "params": {"list": {}}, "differentiable": {"bool": false}}, "func_name": "torch.optim.optimizer._default_to_fused_or_foreach"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.utils._foreach_utils._get_foreach_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_foreach_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.utils._foreach_utils._get_fused_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_fused_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.Adadelta.step contains torch.utils._foreach_utils._group_tensors_by_device_and_dtype <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.Adadelta.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype", "arguments": {"args": {"tensorlistlist": {"list": {}}, "with_indices": {"bool": false}}, "func_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch._VariableFunctionsClass._foreach_add <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch._VariableFunctionsClass._foreach_add_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add_", "arguments": {"args": {"alpha": {"float": -1.0}}, "func_name": "torch._VariableFunctionsClass._foreach_add_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch._VariableFunctionsClass._foreach_addcmul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcmul_", "arguments": {"args": {"value": {"float": 0.09999999999999998}}, "func_name": "torch._VariableFunctionsClass._foreach_addcmul_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch._VariableFunctionsClass._foreach_div_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_div_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch._VariableFunctionsClass._foreach_mul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_mul_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch._VariableFunctionsClass._foreach_sqrt_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_sqrt_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch.optim.adadelta._multi_tensor_adadelta <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adadelta._multi_tensor_adadelta", "arguments": {"args": {"lr": {"float": 1.0}, "rho": {"float": 0.9}, "eps": {"float": 1e-06}, "weight_decay": {"int": 0}, "maximize": {"bool": false}, "differentiable": {"bool": false}, "has_complex": {"bool": false}, "params": {"list": {}}, "grads": {"list": {}}, "square_avgs": {"list": {}}, "acc_deltas": {"list": {}}}, "func_name": "torch.optim.adadelta._multi_tensor_adadelta"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch.optim.optimizer._default_to_fused_or_foreach <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._default_to_fused_or_foreach", "arguments": {"args": {"use_fused": {"bool": false}, "params": {"list": {}}, "differentiable": {"bool": false}}, "func_name": "torch.optim.optimizer._default_to_fused_or_foreach"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch.utils._foreach_utils._get_foreach_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_foreach_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch.utils._foreach_utils._get_fused_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_fused_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adadelta.adadelta contains torch.utils._foreach_utils._group_tensors_by_device_and_dtype <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adadelta.adadelta"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype", "arguments": {"args": {"tensorlistlist": {"list": {}}, "with_indices": {"bool": false}}, "func_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_add_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_addcdiv_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcdiv_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_addcmul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcmul_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_div_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_div_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_lerp_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_lerp_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_mul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_mul_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_sqrt <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_sqrt"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass.equal <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass.equal"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass.tensor <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass.tensor"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_add_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_addcdiv_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcdiv_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_addcmul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcmul_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_div_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_div_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_lerp_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_lerp_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_mul_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_mul_"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass._foreach_sqrt <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_sqrt"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass.equal <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass.equal"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch._VariableFunctionsClass.tensor <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass.tensor", "arguments": {"args": {"device": {"str": "cpu"}}, "func_name": "torch._VariableFunctionsClass.tensor"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.optim.optimizer._default_to_fused_or_foreach <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._default_to_fused_or_foreach", "arguments": {"args": {"use_fused": {"bool": false}, "params": {"list": {}}, "differentiable": {"bool": false}}, "func_name": "torch.optim.optimizer._default_to_fused_or_foreach"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.optim.optimizer._dispatch_sqrt <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._dispatch_sqrt"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.optim.optimizer._get_value <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._get_value"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.optim.optimizer._stack_if_compiling <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._stack_if_compiling"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.utils._foreach_utils._get_foreach_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_foreach_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.utils._foreach_utils._get_fused_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_fused_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.adam.adam contains torch.utils._foreach_utils._group_tensors_by_device_and_dtype <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype", "arguments": {"args": {"tensorlistlist": {"list": {}}, "with_indices": {"bool": false}}, "func_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.lr_scheduler.LRScheduler.step contains torch.optim.lr_scheduler.StepLR.get_lr <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler.LRScheduler.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler.StepLR.get_lr", "arguments": {"args": {"self": {"torch.optim.lr_scheduler.StepLR": {"gamma": 0.7, "last_epoch": 0, "step_size": 1, "verbose": false}}}, "func_name": "torch.optim.lr_scheduler.StepLR.get_lr"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": [{"type": "constant", "prop_name": "meta_vars.torch/optim/lr_scheduler.py:__init__.step_size", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "constant", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float", "values": [-1.0]}]}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.lr_scheduler.LRScheduler.step contains torch.optim.lr_scheduler._enable_get_lr_call.__enter__ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler.LRScheduler.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler._enable_get_lr_call.__enter__"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": [{"type": "constant", "prop_name": "meta_vars.torch/optim/lr_scheduler.py:__init__.step_size", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "constant", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float", "values": [-1.0]}]}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.lr_scheduler.LRScheduler.step contains torch.optim.lr_scheduler._enable_get_lr_call.__exit__ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler.LRScheduler.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler._enable_get_lr_call.__exit__"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": [{"type": "constant", "prop_name": "meta_vars.torch/optim/lr_scheduler.py:__init__.step_size", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "constant", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float", "values": [-1.0]}]}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.lr_scheduler.LRScheduler.step contains torch.optim.lr_scheduler._enable_get_lr_call.__init__ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler.LRScheduler.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.lr_scheduler._enable_get_lr_call.__init__"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": [{"type": "constant", "prop_name": "meta_vars.torch/optim/lr_scheduler.py:__init__.step_size", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "constant", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float", "values": [-1.0]}]}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.optimizer.Optimizer.register_step_post_hook contains torch.utils.hooks.RemovableHandle.__init__ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.optimizer.Optimizer.register_step_post_hook"}, {"param_type": "APIParam", "api_full_name": "torch.utils.hooks.RemovableHandle.__init__", "arguments": {"args": {"self": {"torch.utils.hooks.RemovableHandle": {"next_id": 0}}, "hooks_dict": {"OrderedDict": {}}}, "func_name": "torch.utils.hooks.RemovableHandle.__init__"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.sgd.SGD.step contains torch._VariableFunctionsClass._foreach_add_ <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add_", "arguments": {"args": {"alpha": {"float": -0.001}}, "func_name": "torch._VariableFunctionsClass._foreach_add_"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.sgd.SGD.step contains torch.optim.optimizer._default_to_fused_or_foreach <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._default_to_fused_or_foreach", "arguments": {"args": {"differentiable": {"bool": false}, "use_fused": {"bool": false}, "params": {"list": {}}}, "func_name": "torch.optim.optimizer._default_to_fused_or_foreach"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.sgd.SGD.step contains torch.optim.sgd.SGD._init_group <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD._init_group", "arguments": {"args": {"self": {"torch.optim.sgd.SGD": {}}, "group": {"dict": {}}, "params_with_grad": {"list": []}, "d_p_list": {"list": []}, "momentum_buffer_list": {"list": []}}, "func_name": "torch.optim.sgd.SGD._init_group"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.sgd.SGD.step contains torch.utils._foreach_utils._get_foreach_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_foreach_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.sgd.SGD.step contains torch.utils._foreach_utils._get_fused_kernels_supported_devices <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_fused_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "torch.optim.sgd.SGD.step contains torch.utils._foreach_utils._group_tensors_by_device_and_dtype <class 'mldaikon.invariant.base_cls._NOT_SET'>", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.sgd.SGD.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype", "arguments": {"args": {"tensorlistlist": {"list": {}}, "with_indices": {"bool": true}}, "func_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype"}}], "precondition": {"parent_func_call_pre": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "Consistency Relation between torch.nn.Parameter.data and torch.nn.Parameter.data", "relation": "ConsistencyRelation", "params": [{"param_type": "VarTypeParam", "var_type": "torch.nn.Parameter", "attr_name": "data"}, {"param_type": "VarTypeParam", "var_type": "torch.nn.Parameter", "attr_name": "data"}], "precondition": {"var": {"inverted": false, "preconditions": [{"clauses": [{"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net.weight"]}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [2.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [1200.0]}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_grad_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}, {"clauses": [{"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [60.0]}, {"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net.bias"]}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_grad_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}, {"clauses": [{"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [60.0]}, {"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [2.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_grad_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net2.weight"]}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}, {"clauses": [{"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net2.bias"]}, {"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [4.0]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_grad_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "Consistency Relation between torch.nn.Parameter.grad and torch.nn.Parameter.grad", "relation": "ConsistencyRelation", "params": [{"param_type": "VarTypeParam", "var_type": "torch.nn.Parameter", "attr_name": "grad"}, {"param_type": "VarTypeParam", "var_type": "torch.nn.Parameter", "attr_name": "grad"}], "precondition": {"var": {"inverted": false, "preconditions": [{"clauses": [{"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net.weight"]}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [2.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [1200.0]}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}, {"clauses": [{"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [60.0]}, {"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net.bias"]}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}, {"clauses": [{"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [60.0]}, {"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [2.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net2.weight"]}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}, {"clauses": [{"type": "unequal", "prop_name": "process_id", "additional_path": "None", "prop_dtype": "int"}, {"type": "constant", "prop_name": "meta_vars.stage", "additional_path": "None", "prop_dtype": "str", "values": ["training"]}, {"type": "unequal", "prop_name": "attributes._ML_DAIKON_data_ID", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "attributes.ndim", "additional_path": "None", "prop_dtype": "float", "values": [1.0]}, {"type": "consistent", "prop_name": "meta_vars.step", "additional_path": "None", "prop_dtype": "float"}, {"type": "unequal", "prop_name": "meta_vars._DATA_PARALLEL_RANK", "additional_path": "None", "prop_dtype": "float"}, {"type": "constant", "prop_name": "var_name", "additional_path": "None", "prop_dtype": "str", "values": ["net2.bias"]}, {"type": "constant", "prop_name": "attributes.nbytes", "additional_path": "None", "prop_dtype": "float", "values": [4.0]}, {"type": "unequal", "prop_name": "thread_id", "additional_path": "None", "prop_dtype": "int"}]}]}}, "num_positive_examples": null, "num_negative_examples": null}
{"text_description": "Consistency Relation between torch.nn.Parameter.ndim and torch.nn.Parameter.ndim", "relation": "ConsistencyRelation", "params": [{"param_type": "VarTypeParam", "var_type": "torch.nn.Parameter", "attr_name": "ndim"}, {"param_type": "VarTypeParam", "var_type": "torch.nn.Parameter", "attr_name": "ndim"}], "precondition": {"var": {"inverted": false, "preconditions": [{"clauses": "Unconditional"}]}}, "num_positive_examples": null, "num_negative_examples": null}