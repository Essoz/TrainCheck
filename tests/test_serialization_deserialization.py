import json

from traincheck.invariant import Invariant

invariants_json_str = """{"text_description": "torch.optim.adam.Adam.step contains torch.is_grad_enabled of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.is_grad_enabled"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.autograd.grad_mode.set_grad_enabled.__init__ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.autograd.grad_mode.set_grad_enabled.__init__"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._C._set_grad_enabled of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._C._set_grad_enabled"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.optimizer.Optimizer._cuda_graph_capture_health_check of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer.Optimizer._cuda_graph_capture_health_check"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._utils.is_compiling of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._utils.is_compiling"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.backends.cuda.is_built of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.backends.cuda.is_built"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.cuda.is_available of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.cuda.is_available"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.cuda._is_compiled of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.cuda._is_compiled"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.cuda._nvml_based_avail of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.cuda._nvml_based_avail"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._C._cuda_getDeviceCount of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._C._cuda_getDeviceCount"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.cuda.graphs.is_current_stream_capturing of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.cuda.graphs.is_current_stream_capturing"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._C._cuda_isCurrentStreamCapturing of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._C._cuda_isCurrentStreamCapturing"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.adam.Adam._init_group of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam._init_group"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.adam.adam of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adam.adam"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._C._has_torch_function_unary of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._C._has_torch_function_unary"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.optimizer._default_to_fused_or_foreach of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._default_to_fused_or_foreach"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._jit_internal.is_scripting of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._jit_internal.is_scripting"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.utils._foreach_utils._get_fused_kernels_supported_devices of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_fused_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._C._get_privateuse1_backend_name of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._C._get_privateuse1_backend_name"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.utils._foreach_utils._get_foreach_kernels_supported_devices of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._get_foreach_kernels_supported_devices"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.adam._multi_tensor_adam of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.adam._multi_tensor_adam"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.utils._foreach_utils._group_tensors_by_device_and_dtype of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.utils._foreach_utils._group_tensors_by_device_and_dtype"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.autograd.grad_mode.no_grad.__init__ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.autograd.grad_mode.no_grad.__init__"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._C.PyCapsule._group_tensors_by_device_and_dtype of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._C.PyCapsule._group_tensors_by_device_and_dtype"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass.is_complex of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass.is_complex"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_add_ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_add_"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_lerp_ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_lerp_"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_mul_ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_mul_"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_addcmul_ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcmul_"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.optimizer._get_value of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._get_value"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.optimizer._stack_if_compiling of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._stack_if_compiling"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch.optim.optimizer._dispatch_sqrt of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch.optim.optimizer._dispatch_sqrt"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_sqrt of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_sqrt"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_div_ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_div_"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains torch._VariableFunctionsClass._foreach_addcdiv_ of type traincheck.trace.types.FuncCallEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "APIParam", "api_full_name": "torch._VariableFunctionsClass._foreach_addcdiv_"}], "precondition": {"parent_func_call_pre": [{"clauses": "Unconditional"}]}}
{"text_description": "torch.optim.adam.Adam.step contains ('Parameter', 'data') of type traincheck.trace.types.VarChangeEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "VarTypeParam", "var_type": "Parameter", "attr_name": "data"}], "precondition": {"parent_func_call_pre": [], "var_events": [{"clauses": [{"type": "constant", "prop_name": "attributes.requires_grad", "prop_dtype": "bool", "values": [true]}]}]}}
{"text_description": "torch.optim.adam.Adam.step contains ('Parameter', 'grad') of type traincheck.trace.types.VarChangeEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "VarTypeParam", "var_type": "Parameter", "attr_name": "grad"}], "precondition": {"parent_func_call_pre": [], "var_events": [{"clauses": [{"type": "constant", "prop_name": "attributes.requires_grad", "prop_dtype": "bool", "values": [true]}]}]}}
{"text_description": "torch.optim.adam.Adam.step contains ('Tensor', 'data') of type traincheck.trace.types.VarChangeEvent", "relation": "APIContainRelation", "params": [{"param_type": "APIParam", "api_full_name": "torch.optim.adam.Adam.step"}, {"param_type": "VarTypeParam", "var_type": "Tensor", "attr_name": "data"}], "precondition": {"parent_func_call_pre": [], "var_events": [{"clauses": "Unconditional"}]}}"""


def test_serialization_deserialization():
    """Exercise all serialization and deserialization methods of classes in traincheck.invariants.base_cls module"""

    for line in invariants_json_str.split("\n"):
        inv_dict = json.loads(line)
        inv = Invariant.from_dict(inv_dict)
        inv_json_str = json.dumps(inv.to_dict())
        inv_json_str_original = json.dumps(
            json.loads(line)
        )  # to compare with original json string
        assert inv_json_str == inv_json_str_original


for line in invariants_json_str.split("\n"):
    inv_dict = json.loads(line)
    inv = Invariant.from_dict(inv_dict)
    inv_json_str = json.dumps(inv.to_dict())
    inv_json_str_original = json.dumps(
        json.loads(line)
    )  # to compare with original json string
    assert inv_json_str == inv_json_str_original
